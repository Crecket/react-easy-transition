{"version":3,"sources":["../../../../src/common/store/configureStore.dev.js"],"names":["configureStore","initialState","store","instrument","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA;;;;;qBAQwBA,c;;AANxB;;AACA;;;;;;;;;;;;;;AAKe,SAASA,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,MAAMC,QAAQ,+CAEZD,YAFY,EAGZ,oBACE,oDADF,EAEE,sBAASE,UAAT,EAFF,CAHY,CAAd;;AASA,MAAIC,OAAOC,GAAX,EAAgB;AACdD,WAAOC,GAAP,CAAWC,MAAX,CAAkB,aAAlB,EAAiC,YAAM;AACrC,UAAMC,kBAAkBC,QAAQ,aAAR,YAAxB;AACAN,YAAMO,cAAN,CAAqBF,eAArB;AACD,KAHD;AAID;;AAED,SAAOL,KAAP;AACD","file":"configureStore.dev.js","sourcesContent":["'use strict'\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from 'reducers'\r\nimport DevTools from 'containers/DevTools'\r\n\r\nexport default function configureStore(initialState) {\r\n  const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(thunk),\r\n      DevTools.instrument()\r\n    )\r\n  )\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('../reducers', () => {\r\n      const nextRootReducer = require('../reducers').default\r\n      store.replaceReducer(nextRootReducer)\r\n    })\r\n  }\r\n\r\n  return store\r\n}"]}