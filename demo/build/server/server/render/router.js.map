{"version":3,"sources":["../../../../src/server/render/router.js"],"names":["renderComponentWithRoot","Component","componentProps","store","initialState","getState","InitialView","data","renderStatic","renderToString","head","rewind","toJS","handleError","res","error","console","status","send","message","handleRedirect","redirectLocation","redirect","pathname","search","routeIsUnmatched","renderProps","routes","length","path","handleRoute","route","dispatch","type","readyOnAllActions","components","filter","component","readyOnActions","map","params","log","all","then","router","req","url","location","module","exports"],"mappings":"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","file":"router.js","sourcesContent":["'use strict'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom/server'\r\nimport { createMemoryHistory, RouterContext, match } from 'react-router'\r\nimport { Provider } from 'react-redux'\r\nimport { Map, fromJS } from 'immutable'\r\nimport { StyleSheetServer } from 'aphrodite/no-important'\r\n\r\nimport Helmet from 'react-helmet'\r\n\r\nimport configureStore from 'store/configureStore'\r\nimport {syncHistoryWithStore} from 'reducers/route'\r\n\r\nimport routes from 'routes/Routes'\r\nimport html from './html'\r\n\r\nfunction renderComponentWithRoot(Component, componentProps, store) {\r\n\r\n  const initialState = store.getState()\r\n\r\n  const InitialView = (\r\n    <Provider store={store}>\r\n      <div>\r\n        <Component {...componentProps} />\r\n      </div>\r\n    </Provider>\r\n  )\r\n\r\n  const data = StyleSheetServer.renderStatic(\r\n    () => ReactDOM.renderToString(InitialView)\r\n  )\r\n  const head = Helmet.rewind()\r\n  return html(head, data, initialState.toJS())\r\n}\r\n\r\nfunction handleError(res, error) {\r\n  console.error(error)\r\n  res.status(500).send('Internal server error: ' + error.message)\r\n}\r\n\r\nfunction handleRedirect(res, redirectLocation) {\r\n  res.redirect(302, redirectLocation.pathname + redirectLocation.search)\r\n}\r\n\r\nfunction routeIsUnmatched(renderProps) {\r\n  return renderProps.routes[renderProps.routes.length - 1].path === '*'\r\n}\r\n\r\nfunction handleRoute(route, res, renderProps) {\r\n  const store = configureStore(Map())\r\n\r\n  store.dispatch({\r\n    type: 'INITIALIZE_ROUTE',\r\n    route\r\n  })\r\n\r\n  const status = routeIsUnmatched(renderProps) ? 404 : 200\r\n  const readyOnAllActions = renderProps.components\r\n    .filter((component) => component.readyOnActions)\r\n    .map((component) => component.readyOnActions(store.dispatch, renderProps.params))\r\n\r\n  console.log('promise readyonaction: ', readyOnAllActions)\r\n  Promise\r\n    .all(readyOnAllActions)\r\n    .then(() => res.status(status).send(renderComponentWithRoot(RouterContext, renderProps, store)))\r\n}\r\n\r\nvar router = function (req, res) {\r\n  let route = req.url\r\n\r\n  match({ routes, location: route }, (error, redirectLocation, renderProps) => {\r\n\r\n    if (error) {\r\n      handleError(res, error)\r\n\r\n    } else if (redirectLocation) {\r\n      handleRedirect(res, redirectLocation)\r\n\r\n    } else if (renderProps) {\r\n      handleRoute(route, res, renderProps)\r\n\r\n    } else {\r\n      // This should actually never happen, as Routes.js has a catch-all '*' path.\r\n      res.status(404).send('Not found')\r\n    }\r\n  })\r\n}\r\n\r\nmodule.exports = router"]}